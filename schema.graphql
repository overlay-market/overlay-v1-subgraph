type Position @entity {
  id: ID!
  number: BigInt!
  collateralManager: Bytes!
  market: Bytes!
  isLong: Boolean!
  leverage: BigInt!
  # pricePoint: PricePoint! @derivedFrom(field: "id")
  oiShares: BigInt!
  debt: BigInt!
  cost: BigInt!
  compounding: BigInt!
  liquidationPrice: BigDecimal!
  totalSupply: BigInt!
}

type CollateralManager @entity {
  id: ID!
  address: Bytes!
}

type Account @entity {
  id: ID!
  address: Bytes!
  balances: [Balance!]! @derivedFrom(field: "account")
  # positions: [ Position! ]! @derivedFrom(field: "id")
}

type PricePoint @entity {
  id: ID!
  number: BigInt!
  bid: BigInt!
  ask: BigInt!
  twap: BigInt!
}

type Market @entity {
  id: ID!
  feed: Bytes!
  base: Bytes!
  quote: Bytes!
  baseName: String!
  quoteName: String!
  baseSymbol: String!
  quoteSymbol: String!
  # prices: [ PricePoint! ]! @derivedFrom(field: "id")
}

type Balance @entity {
  id: ID!
  position: BigInt!
  account: Account!
  shares: BigInt!
}

type MarketManifest @entity {
  id: ID!
  markets: [ Bytes! ]!
  compoundings: [ BigInt! ]!
}

type MarketMonitor @entity {
  id: ID!
  positions: [ Position! ]!
}